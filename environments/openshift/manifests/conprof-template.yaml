apiVersion: v1
kind: Template
metadata:
  name: conprof
objects:
- apiVersion: v1
  data:
    conprof.yaml: InNjcmFwZV9jb25maWdzIjoKLSAiam9iX25hbWUiOiAiY29ucHJvZiIKICAia3ViZXJuZXRlc19zZF9jb25maWdzIjoKICAtICJuYW1lc3BhY2VzIjoKICAgICAgIm5hbWVzIjoKICAgICAgLSAiJHtOQU1FU1BBQ0V9IgogICAgInJvbGUiOiAicG9kIgogICJyZWxhYmVsX2NvbmZpZ3MiOgogIC0gImFjdGlvbiI6ICJrZWVwIgogICAgInJlZ2V4IjogInRoYW5vcy4qIgogICAgInNvdXJjZV9sYWJlbHMiOgogICAgLSAiX19tZXRhX2t1YmVybmV0ZXNfcG9kX25hbWUiCiAgLSAiYWN0aW9uIjogImtlZXAiCiAgICAicmVnZXgiOiAiaHR0cCIKICAgICJzb3VyY2VfbGFiZWxzIjoKICAgIC0gIl9fbWV0YV9rdWJlcm5ldGVzX3BvZF9jb250YWluZXJfcG9ydF9uYW1lIgogICJzY3JhcGVfaW50ZXJ2YWwiOiAiMW0iCiAgInNjcmFwZV90aW1lb3V0IjogIjFtIg==
  kind: Secret
  metadata:
    labels:
      app.kubernetes.io/name: conprof
      app.kubernetes.io/version: v${IMAGE_TAG}
    name: conprof-config
    namespace: ${NAMESPACE}
  type: Opaque
- apiVersion: rbac.authorization.k8s.io/v1
  items:
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        app.kubernetes.io/name: conprof
        app.kubernetes.io/version: v${IMAGE_TAG}
      name: conprof
      namespace: ${NAMESPACE}
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: conprof
    subjects:
    - kind: ServiceAccount
      name: conprof
      namespace: ${NAMESPACE}
  kind: RoleBindingList
- apiVersion: rbac.authorization.k8s.io/v1
  items:
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      labels:
        app.kubernetes.io/name: conprof
        app.kubernetes.io/version: v${IMAGE_TAG}
      name: conprof
      namespace: ${NAMESPACE}
    rules:
    - apiGroups:
      - ""
      resources:
      - services
      - endpoints
      - pods
      verbs:
      - get
      - list
      - watch
  kind: RoleList
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: conprof-tls
    labels:
      app.kubernetes.io/name: conprof
      app.kubernetes.io/version: v${IMAGE_TAG}
    name: conprof-governing-service
    namespace: ${NAMESPACE}
  spec:
    clusterIP: None
    ports:
    - name: https
      port: 443
      targetPort: 443
    selector:
      app.kubernetes.io/name: conprof
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app.kubernetes.io/name: conprof
      app.kubernetes.io/version: v${IMAGE_TAG}
    name: conprof
    namespace: ${NAMESPACE}
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    labels:
      app.kubernetes.io/name: conprof
      app.kubernetes.io/version: v${IMAGE_TAG}
    name: conprof
    namespace: ${NAMESPACE}
  spec:
    podManagementPolicy: Parallel
    selector:
      matchLabels:
        app.kubernetes.io/name: conprof
    serviceName: conprof-governing-service
    template:
      metadata:
        labels:
          app.kubernetes.io/name: conprof
      spec:
        containers:
        - args:
          - all
          - --storage.tsdb.path=/conprof
          - --config.file=/etc/conprof/conprof.yaml
          image: ${IMAGE}:${IMAGE_TAG}
          name: conprof
          ports:
          - containerPort: 8080
            name: http
          volumeMounts:
          - mountPath: /conprof
            name: storage
            readOnly: false
          - mountPath: /etc/conprof
            name: config
            readOnly: false
        - args: '["all", "--storage.tsdb.path=/conprof", "--config.file=/etc/conprof/conprof.yaml"]--web.listen-address=127.0.0.1:8080'
          image: ${IMAGE}:${IMAGE_TAG}
          name: conprof
          ports:
          - containerPort: 8080
            name: http
          volumeMounts:
          - mountPath: /conprof
            name: storage
            readOnly: false
          - mountPath: /etc/conprof
            name: config
            readOnly: false
        - args:
          - -provider=openshift
          - -https-address=:443
          - -http-address=
          - -email-domain=*
          - -upstream=http://localhost:8080
          - -openshift-service-account=prometheus-telemeter
          - '-openshift-sar={"resource": "namespaces", "verb": "get", "name": "${NAMESPACE}",
            "namespace": "${NAMESPACE}"}'
          - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get",
            "name": "${NAMESPACE}", "namespace": "${NAMESPACE}"}}'
          - -tls-cert=/etc/tls/private/tls.crt
          - -tls-key=/etc/tls/private/tls.key
          - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
          - -cookie-secret-file=/etc/proxy/secrets/session_secret
          - -openshift-ca=/etc/pki/tls/cert.pem
          - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          image: ${PROXY_IMAGE}:${PROXY_IMAGE_TAG}
          name: proxy
          ports:
          - containerPort: 443
            name: https
          volumeMounts:
          - mountPath: /etc/tls/private
            name: secret-conprof-tls
            readOnly: false
          - mountPath: /etc/proxy/secrets
            name: secret-conprof-proxy
            readOnly: false
        nodeSelector:
          kubernetes.io/os: linux
        serviceAccount: prometheus-telemeter
        serviceAccountName: prometheus-telemeter
        volumes:
        - emptyDir: {}
          name: storage
        - name: config
          secret:
            secretName: conprof-config
        - name: secret-conprof-tls
          secret:
            secretName: conprof-tls
        - name: secret-conprof-proxy
          secret:
            secretName: conprof-proxy
parameters:
- name: NAMESPACE
  value: telemeter
- name: IMAGE
  value: quay.io/conprof/conprof
- name: IMAGE_TAG
  value: v0.1.0-dev
- name: REPLICAS
  value: "1"
- name: PROXY_IMAGE
  value: openshift/oauth-proxy
- name: PROXY_IMAGE_TAG
  value: v1.1.0
